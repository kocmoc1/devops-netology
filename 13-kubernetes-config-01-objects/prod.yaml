apiVersion: v1
kind: Pod
metadata:
  name: 13-kube-01
  labels:
    app: 13-kube-01
spec:
  containers:
  - name: frontend
    image: kocmoc1/frontend:0.0.1
    ports:
    - containerPort: 80
      name: http-frontend
    env:
      - name: BASE_URL
        value: "http://localhost:9000"
  - name: backend
    image: kocmoc1/backend:0.0.1
    ports:
    - containerPort: 9000
      name: http-backend
    env:
    # PostgreSQL configuration
    - name: DATABASE_URL
      value: "postgres://postgres:postgres@10.233.48.119:5432/news"
#kubectl port-forward deployment/3-kube-01 :8000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-sts
spec:
  serviceName: postgres-headless-svc
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:

      containers:
        - name: postgresql
          image: postgres:13-alpine
          imagePullPolicy: "IfNotPresent"
          env:
            # PostgreSQL configuration
            - name: POSTGRESQL_VOLUME_DIR
              value: "/pgdata/postgresql"
            - name: PGDATA
              value: "/pgdata/postgresql/data"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "news"
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /pgdata/postgresql
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        storageClassName: "local-storage"
        resources:
          requests:
            storage: "1Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: 13-kube-01
  ports:
  - name: name-of-service-port
    protocol: TCP
    port: 80
    targetPort: http-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
    protocol: TCP 
  selector:
    app: postgres
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-postgres-sts-0
  labels:
    app: postgres
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /mnt/disks/vol1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node1
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: 13-kube-01
  ports:
  - name: backen-port
    protocol: TCP
    port: 9000
    targetPort: http-backend
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres
